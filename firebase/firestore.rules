rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is accessing their own data
    function isUserOwned(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Users can read any user profile
      allow read: if isAuthenticated();
      
      // Users can only update their own profile
      allow update: if isUserOwned(userId);
      
      // Allow creation during signup
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Posts collection rules
    match /posts/{postId} {
      // Anyone authenticated can read posts
      allow read: if isAuthenticated();
      
      // Only post owner can update or delete
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
      
      // Anyone authenticated can create posts
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Conversations collection rules
    match /conversations/{conversationId} {
      // Users can read conversations they're part of
      allow read: if isAuthenticated() && 
                    request.auth.uid in resource.data.participants;
      
      // Users can create conversations if they're included in participants
      allow create: if isAuthenticated() && 
                      request.auth.uid in request.resource.data.participants;
      
      // Only participants can update conversations
      allow update: if isAuthenticated() && 
                      request.auth.uid in resource.data.participants;
      
      // Messages sub-collection rules
      match /messages/{messageId} {
        // Only conversation participants can read/write messages
        allow read, write: if isAuthenticated() && 
                             request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
    
    // Events collection rules
    match /events/{eventId} {
      // Anyone authenticated can read events
      allow read: if isAuthenticated();
      
      // Only event organizer can update or delete
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.organizerId;
      
      // Anyone authenticated can create events
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.organizerId;
    }
  }
}
